-- S·ª≠a budget daily - c·∫≠p nh·∫≠t t·∫•t c·∫£ periods
USE PersonalFinanceDB;
GO

PRINT 'üîß S·ª¨A BUDGET DAILY - C·∫¨P NH·∫¨T T·∫§T C·∫¢ PERIODS';
PRINT '==============================================';

-- 1. Hi·ªÉn th·ªã budgets hi·ªán c√≥
PRINT '1. BUDGETS HI·ªÜN C√ì:';
SELECT 
    BudgetName,
    Period,
    BudgetAmount,
    SpentAmount,
    CASE Period
        WHEN 'daily' THEN 'H√†ng ng√†y'
        WHEN 'monthly' THEN 'H√†ng th√°ng'
        WHEN 'quarterly' THEN 'H√†ng qu√Ω'
        WHEN 'yearly' THEN 'H√†ng nƒÉm'
        ELSE Period
    END as [Chu K·ª≥ Hi·ªÉn Th·ªã]
FROM Budgets 
WHERE IsActive = 1;

PRINT '';

-- 2. C·∫≠p nh·∫≠t DAILY budgets (t√≠nh theo ng√†y h√¥m nay)
PRINT '2. C·∫≠p nh·∫≠t DAILY budgets...';

UPDATE b
SET b.SpentAmount = ISNULL(expense_total.total, 0),
    b.UpdatedAt = GETUTCDATE()
FROM Budgets b
LEFT JOIN (
    SELECT 
        t.UserID,
        t.CategoryID,
        SUM(t.Amount) as total
    FROM Transactions t
    WHERE t.Type = 'Expense'
      AND t.TransactionDate = CAST(GETDATE() AS DATE) -- Ch·ªâ h√¥m nay
    GROUP BY t.UserID, t.CategoryID
) expense_total ON b.UserID = expense_total.UserID AND b.CategoryID = expense_total.CategoryID
WHERE b.IsActive = 1 
  AND b.CategoryID IS NOT NULL
  AND b.Period = 'daily';

DECLARE @dailyUpdated INT = @@ROWCOUNT;
PRINT 'C·∫≠p nh·∫≠t ' + CAST(@dailyUpdated AS NVARCHAR(10)) + ' daily budgets';

-- 3. C·∫≠p nh·∫≠t MONTHLY budgets (t√≠nh theo th√°ng n√†y)
PRINT '3. C·∫≠p nh·∫≠t MONTHLY budgets...';

UPDATE b
SET b.SpentAmount = ISNULL(expense_total.total, 0),
    b.UpdatedAt = GETUTCDATE()
FROM Budgets b
LEFT JOIN (
    SELECT 
        t.UserID,
        t.CategoryID,
        SUM(t.Amount) as total
    FROM Transactions t
    WHERE t.Type = 'Expense'
      AND t.TransactionDate >= DATEFROMPARTS(YEAR(GETDATE()), MONTH(GETDATE()), 1)
      AND t.TransactionDate <= EOMONTH(GETDATE())
    GROUP BY t.UserID, t.CategoryID
) expense_total ON b.UserID = expense_total.UserID AND b.CategoryID = expense_total.CategoryID
WHERE b.IsActive = 1 
  AND b.CategoryID IS NOT NULL
  AND b.Period = 'monthly';

DECLARE @monthlyUpdated INT = @@ROWCOUNT;
PRINT 'C·∫≠p nh·∫≠t ' + CAST(@monthlyUpdated AS NVARCHAR(10)) + ' monthly budgets';

-- 4. C·∫≠p nh·∫≠t QUARTERLY budgets (t√≠nh theo qu√Ω n√†y)
PRINT '4. C·∫≠p nh·∫≠t QUARTERLY budgets...';

DECLARE @currentDate DATE = GETDATE();
DECLARE @quarter INT = CEILING(MONTH(@currentDate) / 3.0);
DECLARE @quarterStartMonth INT = (@quarter - 1) * 3 + 1;
DECLARE @quarterStart DATE = DATEFROMPARTS(YEAR(@currentDate), @quarterStartMonth, 1);
DECLARE @quarterEnd DATE = EOMONTH(DATEADD(MONTH, 2, @quarterStart));

UPDATE b
SET b.SpentAmount = ISNULL(expense_total.total, 0),
    b.UpdatedAt = GETUTCDATE()
FROM Budgets b
LEFT JOIN (
    SELECT 
        t.UserID,
        t.CategoryID,
        SUM(t.Amount) as total
    FROM Transactions t
    WHERE t.Type = 'Expense'
      AND t.TransactionDate >= @quarterStart
      AND t.TransactionDate <= @quarterEnd
    GROUP BY t.UserID, t.CategoryID
) expense_total ON b.UserID = expense_total.UserID AND b.CategoryID = expense_total.CategoryID
WHERE b.IsActive = 1 
  AND b.CategoryID IS NOT NULL
  AND b.Period = 'quarterly';

DECLARE @quarterlyUpdated INT = @@ROWCOUNT;
PRINT 'C·∫≠p nh·∫≠t ' + CAST(@quarterlyUpdated AS NVARCHAR(10)) + ' quarterly budgets';

-- 5. C·∫≠p nh·∫≠t YEARLY budgets (t√≠nh theo nƒÉm n√†y)
PRINT '5. C·∫≠p nh·∫≠t YEARLY budgets...';

UPDATE b
SET b.SpentAmount = ISNULL(expense_total.total, 0),
    b.UpdatedAt = GETUTCDATE()
FROM Budgets b
LEFT JOIN (
    SELECT 
        t.UserID,
        t.CategoryID,
        SUM(t.Amount) as total
    FROM Transactions t
    WHERE t.Type = 'Expense'
      AND t.TransactionDate >= DATEFROMPARTS(YEAR(GETDATE()), 1, 1)
      AND t.TransactionDate <= DATEFROMPARTS(YEAR(GETDATE()), 12, 31)
    GROUP BY t.UserID, t.CategoryID
) expense_total ON b.UserID = expense_total.UserID AND b.CategoryID = expense_total.CategoryID
WHERE b.IsActive = 1 
  AND b.CategoryID IS NOT NULL
  AND b.Period = 'yearly';

DECLARE @yearlyUpdated INT = @@ROWCOUNT;
PRINT 'C·∫≠p nh·∫≠t ' + CAST(@yearlyUpdated AS NVARCHAR(10)) + ' yearly budgets';

PRINT '';

-- 6. Hi·ªÉn th·ªã k·∫øt qu·∫£
PRINT 'üìä K·∫æT QU·∫¢ SAU KHI C·∫¨P NH·∫¨T:';

SELECT 
    b.BudgetName as [T√™n Ng√¢n S√°ch],
    ISNULL(c.CategoryName, 'T·∫•t c·∫£ danh m·ª•c') as [Danh M·ª•c],
    CASE b.Period
        WHEN 'daily' THEN 'H√†ng ng√†y'
        WHEN 'monthly' THEN 'H√†ng th√°ng'
        WHEN 'quarterly' THEN 'H√†ng qu√Ω'
        WHEN 'yearly' THEN 'H√†ng nƒÉm'
        ELSE b.Period
    END as [Chu K·ª≥],
    FORMAT(b.BudgetAmount, 'N0') + ' ‚Ç´' as [Ng√¢n S√°ch],
    FORMAT(b.SpentAmount, 'N0') + ' ‚Ç´' as [ƒê√£ Chi],
    FORMAT(b.BudgetAmount - b.SpentAmount, 'N0') + ' ‚Ç´' as [C√≤n L·∫°i],
    CAST(ROUND((b.SpentAmount * 100.0 / NULLIF(b.BudgetAmount, 0)), 1) AS DECIMAL(5,1)) as [T·ª∑ L·ªá %],
    CASE 
        WHEN b.SpentAmount >= b.BudgetAmount THEN 'üî¥ V∆∞·ª£t ng√¢n s√°ch'
        WHEN b.SpentAmount >= (b.BudgetAmount * ISNULL(b.WarningThreshold, 80) / 100.0) THEN 'üü° G·∫ßn v∆∞·ª£t'
        WHEN b.SpentAmount > 0 THEN 'üü¢ ƒêang s·ª≠ d·ª•ng'
        ELSE '‚ö™ Ch∆∞a s·ª≠ d·ª•ng'
    END as [Tr·∫°ng Th√°i]
FROM Budgets b
LEFT JOIN Categories c ON b.CategoryID = c.CategoryID
WHERE b.IsActive = 1
ORDER BY b.SpentAmount DESC, b.BudgetName;

-- 7. Hi·ªÉn th·ªã chi ti·∫øt cho budget "Donate"
PRINT '';
PRINT 'üìã CHI TI·∫æT BUDGET "DONATE":';

SELECT 
    'Budget Info' as [Lo·∫°i],
    b.BudgetName as [T√™n],
    FORMAT(b.BudgetAmount, 'N0') + ' ‚Ç´' as [S·ªë Ti·ªÅn],
    b.Period as [Chu K·ª≥],
    'N/A' as [Ng√†y]
FROM Budgets b 
WHERE b.BudgetName = 'Donate'

UNION ALL

SELECT 
    'Transactions' as [Lo·∫°i],
    'Chi ti√™u ' + c.CategoryName as [T√™n],
    FORMAT(t.Amount, 'N0') + ' ‚Ç´' as [S·ªë Ti·ªÅn],
    'N/A' as [Chu K·ª≥],
    CAST(t.TransactionDate AS NVARCHAR(10)) as [Ng√†y]
FROM Transactions t
INNER JOIN Categories c ON t.CategoryID = c.CategoryID
INNER JOIN Budgets b ON t.UserID = b.UserID AND t.CategoryID = b.CategoryID
WHERE b.BudgetName = 'Donate' 
  AND t.Type = 'Expense'
  AND t.TransactionDate = CAST(GETDATE() AS DATE) -- Ch·ªâ h√¥m nay cho daily budget
ORDER BY [Lo·∫°i], [Ng√†y] DESC;

PRINT '';
PRINT 'üéâ HO√ÄN TH√ÄNH! Budget daily ƒë√£ ƒë∆∞·ª£c c·∫≠p nh·∫≠t!';
PRINT '';
PRINT 'üìã L∆ØU √ù:';
PRINT '   - Daily budget ch·ªâ t√≠nh giao d·ªãch H√îM NAY';
PRINT '   - Monthly budget t√≠nh giao d·ªãch TH√ÅNG N√ÄY';
PRINT '   - N·∫øu mu·ªën ƒë·ªïi daily ‚Üí monthly, c·∫ßn s·ª≠a trong ·ª©ng d·ª•ng';
