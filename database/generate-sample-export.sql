-- =============================================
-- QU·∫¢N L√ù T√ÄI CH√çNH C√Å NH√ÇN - XU·∫§T D·ªÆ LI·ªÜU M·∫™U
-- T√°c gi·∫£: Ti·ªÉu Nh·∫•t B·∫°ch
-- M√¥ t·∫£: Script t·∫°o d·ªØ li·ªáu m·∫´u ƒë·ªÉ xu·∫•t chia s·∫ª tr√™n GitHub
-- =============================================

-- Th√¥ng tin k·∫øt n·ªëi:
-- Server: TIEUNHATBACH\TIEUNHATBACH
-- Login: sa / Password: 123456
-- Database: PersonalFinanceDB

USE master;
GO

-- Ki·ªÉm tra v√† t·∫°o database n·∫øu ch∆∞a t·ªìn t·∫°i
IF NOT EXISTS (SELECT name FROM sys.databases WHERE name = 'PersonalFinanceDB')
BEGIN
    CREATE DATABASE PersonalFinanceDB;
    PRINT '‚úÖ Database PersonalFinanceDB ƒë√£ ƒë∆∞·ª£c t·∫°o';
END
GO

USE PersonalFinanceDB;
GO

-- X√≥a c√°c b·∫£ng c≈© n·∫øu t·ªìn t·∫°i
IF OBJECT_ID('Notifications', 'U') IS NOT NULL DROP TABLE Notifications;
IF OBJECT_ID('UserSettings', 'U') IS NOT NULL DROP TABLE UserSettings;
IF OBJECT_ID('Budgets', 'U') IS NOT NULL DROP TABLE Budgets;
IF OBJECT_ID('Transactions', 'U') IS NOT NULL DROP TABLE Transactions;
IF OBJECT_ID('Categories', 'U') IS NOT NULL DROP TABLE Categories;
IF OBJECT_ID('Users', 'U') IS NOT NULL DROP TABLE Users;
GO

-- T·∫°o b·∫£ng Users
CREATE TABLE Users (
    UserID UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    Email NVARCHAR(255) UNIQUE NOT NULL,
    PasswordHash NVARCHAR(255) NOT NULL,
    FirstName NVARCHAR(100) NOT NULL,
    LastName NVARCHAR(100) NOT NULL,
    PhoneNumber NVARCHAR(20),
    CreatedAt DATETIME2 DEFAULT GETUTCDATE(),
    UpdatedAt DATETIME2 DEFAULT GETUTCDATE(),
    IsActive BIT DEFAULT 1
);
PRINT '‚úÖ B·∫£ng Users ƒë√£ ƒë∆∞·ª£c t·∫°o';

-- T·∫°o b·∫£ng Categories
CREATE TABLE Categories (
    CategoryID UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    UserID UNIQUEIDENTIFIER NULL, -- NULL cho categories m·∫∑c ƒë·ªãnh
    CategoryName NVARCHAR(100) NOT NULL,
    CategoryType NVARCHAR(20) CHECK (CategoryType IN ('Income', 'Expense')) NOT NULL,
    IconName NVARCHAR(50) DEFAULT 'default',
    ColorCode NVARCHAR(7) DEFAULT '#3498db',
    CreatedAt DATETIME2 DEFAULT GETUTCDATE(),
    IsActive BIT DEFAULT 1,
    
    FOREIGN KEY (UserID) REFERENCES Users(UserID) ON DELETE CASCADE
);
PRINT '‚úÖ B·∫£ng Categories ƒë√£ ƒë∆∞·ª£c t·∫°o';

-- T·∫°o b·∫£ng Transactions
CREATE TABLE Transactions (
    TransactionID UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    UserID UNIQUEIDENTIFIER NOT NULL,
    CategoryID UNIQUEIDENTIFIER NOT NULL,
    Amount DECIMAL(15,2) NOT NULL,
    Type NVARCHAR(20) CHECK (Type IN ('Income', 'Expense')) NOT NULL,
    Date DATE NOT NULL,
    Description NVARCHAR(500),
    CreatedAt DATETIME2 DEFAULT GETUTCDATE(),
    UpdatedAt DATETIME2 DEFAULT GETUTCDATE(),
    
    FOREIGN KEY (UserID) REFERENCES Users(UserID) ON DELETE CASCADE,
    FOREIGN KEY (CategoryID) REFERENCES Categories(CategoryID)
);
PRINT '‚úÖ B·∫£ng Transactions ƒë√£ ƒë∆∞·ª£c t·∫°o';

-- T·∫°o b·∫£ng Budgets
CREATE TABLE Budgets (
    BudgetID UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    UserID UNIQUEIDENTIFIER NOT NULL,
    CategoryID UNIQUEIDENTIFIER NOT NULL,
    Amount DECIMAL(15,2) NOT NULL,
    Period NVARCHAR(20) CHECK (Period IN ('daily', 'weekly', 'monthly', 'quarterly', 'yearly')) NOT NULL,
    StartDate DATE NOT NULL,
    EndDate DATE NOT NULL,
    SpentAmount DECIMAL(15,2) DEFAULT 0,
    WarningThreshold DECIMAL(5,2) DEFAULT 70.00 CHECK (WarningThreshold BETWEEN 0 AND 100),
    CreatedAt DATETIME2 DEFAULT GETUTCDATE(),
    UpdatedAt DATETIME2 DEFAULT GETUTCDATE(),
    IsActive BIT DEFAULT 1,
    
    FOREIGN KEY (UserID) REFERENCES Users(UserID) ON DELETE CASCADE,
    FOREIGN KEY (CategoryID) REFERENCES Categories(CategoryID)
);
PRINT '‚úÖ B·∫£ng Budgets ƒë√£ ƒë∆∞·ª£c t·∫°o';

-- T·∫°o b·∫£ng UserSettings
CREATE TABLE UserSettings (
    SettingID UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    UserID UNIQUEIDENTIFIER NOT NULL,
    SettingKey NVARCHAR(100) NOT NULL,
    SettingValue NVARCHAR(MAX) NOT NULL,
    SettingType NVARCHAR(20) NOT NULL DEFAULT 'string',
    Category NVARCHAR(50) NOT NULL,
    CreatedAt DATETIME2 DEFAULT GETUTCDATE(),
    UpdatedAt DATETIME2 DEFAULT GETUTCDATE(),
    
    FOREIGN KEY (UserID) REFERENCES Users(UserID) ON DELETE CASCADE,
    UNIQUE (UserID, SettingKey)
);
PRINT '‚úÖ B·∫£ng UserSettings ƒë√£ ƒë∆∞·ª£c t·∫°o';

-- T·∫°o b·∫£ng Notifications
CREATE TABLE Notifications (
    NotificationID UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    UserID UNIQUEIDENTIFIER NOT NULL,
    Title NVARCHAR(200) NOT NULL,
    Message NVARCHAR(MAX) NOT NULL,
    Type NVARCHAR(50) NOT NULL,
    Priority NVARCHAR(20) NOT NULL DEFAULT 'medium',
    IsRead BIT DEFAULT 0,
    IsArchived BIT DEFAULT 0,
    ActionUrl NVARCHAR(500) NULL,
    ExpiresAt DATETIME2 NULL,
    CreatedAt DATETIME2 DEFAULT GETUTCDATE(),
    ReadAt DATETIME2 NULL,
    
    FOREIGN KEY (UserID) REFERENCES Users(UserID) ON DELETE CASCADE
);
PRINT '‚úÖ B·∫£ng Notifications ƒë√£ ƒë∆∞·ª£c t·∫°o';

-- T·∫°o indexes ƒë·ªÉ t·ªëi ∆∞u hi·ªáu su·∫•t
CREATE INDEX IX_Transactions_UserID_Date ON Transactions(UserID, Date DESC);
CREATE INDEX IX_Transactions_CategoryID ON Transactions(CategoryID);
CREATE INDEX IX_Categories_UserID_Type ON Categories(UserID, CategoryType);
CREATE INDEX IX_Budgets_UserID_Period ON Budgets(UserID, Period);
CREATE INDEX IX_UserSettings_UserID_Category ON UserSettings(UserID, Category);
CREATE INDEX IX_Notifications_UserID_IsRead_CreatedAt ON Notifications(UserID, IsRead, CreatedAt DESC);
PRINT '‚úÖ Indexes ƒë√£ ƒë∆∞·ª£c t·∫°o';

-- Ch√®n d·ªØ li·ªáu m·∫´u cho categories m·∫∑c ƒë·ªãnh
PRINT 'üìù Ch√®n d·ªØ li·ªáu m·∫´u cho categories...';

-- Categories thu nh·∫≠p
INSERT INTO Categories (UserID, CategoryName, CategoryType, IconName, ColorCode) VALUES
(NULL, N'L∆∞∆°ng', 'Income', 'salary', '#27ae60'),
(NULL, N'Th∆∞·ªüng', 'Income', 'bonus', '#f39c12'),
(NULL, N'Ph·ª• c·∫•p', 'Income', 'allowance', '#3498db'),
(NULL, N'ƒê·∫ßu t∆∞', 'Income', 'investment', '#9b59b6'),
(NULL, N'Kinh doanh', 'Income', 'business', '#e67e22'),
(NULL, N'Thu nh·∫≠p kh√°c', 'Income', 'other', '#95a5a6');

-- Categories chi ti√™u
INSERT INTO Categories (UserID, CategoryName, CategoryType, IconName, ColorCode) VALUES
(NULL, N'ƒÇn u·ªëng', 'Expense', 'food', '#e74c3c'),
(NULL, N'ƒêi l·∫°i', 'Expense', 'transport', '#3498db'),
(NULL, N'H·ªçc t·∫≠p', 'Expense', 'education', '#9b59b6'),
(NULL, N'Gi·∫£i tr√≠', 'Expense', 'entertainment', '#f39c12'),
(NULL, N'Y t·∫ø', 'Expense', 'healthcare', '#e67e22'),
(NULL, N'Mua s·∫Øm', 'Expense', 'shopping', '#e91e63'),
(NULL, N'H√≥a ƒë∆°n', 'Expense', 'bills', '#607d8b'),
(NULL, N'Nh√† ·ªü', 'Expense', 'housing', '#795548'),
(NULL, N'Qu·∫ßn √°o', 'Expense', 'clothing', '#ff5722'),
(NULL, N'Chi ti√™u kh√°c', 'Expense', 'other', '#95a5a6');

PRINT '‚úÖ Categories m·∫∑c ƒë·ªãnh ƒë√£ ƒë∆∞·ª£c ch√®n';

-- Ch√®n d·ªØ li·ªáu m·∫´u cho user
PRINT 'üìù Ch√®n d·ªØ li·ªáu m·∫´u cho user...';
DECLARE @UserID UNIQUEIDENTIFIER = NEWID();
INSERT INTO Users (UserID, Email, PasswordHash, FirstName, LastName, PhoneNumber) 
VALUES (@UserID, 'sample@example.com', 'sample_hash', N'Nguy·ªÖn', N'VƒÉn A', '0123456789');

-- Ch√®n categories cho user
PRINT 'üìù Ch√®n categories cho user...';
INSERT INTO Categories (UserID, CategoryName, CategoryType, IconName, ColorCode) 
SELECT @UserID, CategoryName, CategoryType, IconName, ColorCode 
FROM Categories WHERE UserID IS NULL;

-- Ch√®n d·ªØ li·ªáu m·∫´u cho transactions
PRINT 'üìù Ch√®n d·ªØ li·ªáu m·∫´u cho transactions...';
DECLARE @SalaryCategoryID UNIQUEIDENTIFIER;
DECLARE @FoodCategoryID UNIQUEIDENTIFIER;
DECLARE @TransportCategoryID UNIQUEIDENTIFIER;

SELECT @SalaryCategoryID = CategoryID FROM Categories WHERE UserID = @UserID AND CategoryName = N'L∆∞∆°ng';
SELECT @FoodCategoryID = CategoryID FROM Categories WHERE UserID = @UserID AND CategoryName = N'ƒÇn u·ªëng';
SELECT @TransportCategoryID = CategoryID FROM Categories WHERE UserID = @UserID AND CategoryName = N'ƒêi l·∫°i';

INSERT INTO Transactions (UserID, CategoryID, Amount, Type, Date, Description) VALUES
(@UserID, @SalaryCategoryID, 15000000, 'Income', '2025-09-01', N'L∆∞∆°ng th√°ng 9'),
(@UserID, @FoodCategoryID, 250000, 'Expense', '2025-09-02', N'ƒÇn s√°ng'),
(@UserID, @TransportCategoryID, 50000, 'Expense', '2025-09-02', N'ƒêi xe bus'),
(@UserID, @FoodCategoryID, 180000, 'Expense', '2025-09-03', N'ƒÇn tr∆∞a');

-- Ch√®n d·ªØ li·ªáu m·∫´u cho budgets
PRINT 'üìù Ch√®n d·ªØ li·ªáu m·∫´u cho budgets...';
INSERT INTO Budgets (UserID, CategoryID, Amount, Period, StartDate, EndDate) 
VALUES (@UserID, @FoodCategoryID, 2000000, 'monthly', '2025-09-01', '2025-09-30');

-- Ch√®n d·ªØ li·ªáu m·∫´u cho settings
PRINT 'üìù Ch√®n d·ªØ li·ªáu m·∫´u cho settings...';
INSERT INTO UserSettings (UserID, SettingKey, SettingValue, SettingType, Category) 
VALUES 
(@UserID, 'currency', 'VND', 'string', 'general'),
(@UserID, 'language', 'vi', 'string', 'general'),
(@UserID, 'theme', 'light', 'string', 'appearance');

-- Ch√®n d·ªØ li·ªáu m·∫´u cho notifications
PRINT 'üìù Ch√®n d·ªØ li·ªáu m·∫´u cho notifications...';
INSERT INTO Notifications (UserID, Title, Message, Type, Priority) 
VALUES 
(@UserID, N'Ch√†o m·ª´ng b·∫°n', N'Ch√†o m·ª´ng b·∫°n ƒë·∫øn v·ªõi ·ª©ng d·ª•ng Qu·∫£n L√Ω T√†i Ch√≠nh C√° Nh√¢n', 'welcome', 'medium'),
(@UserID, N'V∆∞·ª£t ng√¢n s√°ch', N'B·∫°n ƒë√£ v∆∞·ª£t qu√° ng√¢n s√°ch cho danh m·ª•c ƒÇn u·ªëng', 'budget', 'high');

PRINT '';
PRINT 'üéâ XU·∫§T D·ªÆ LI·ªÜU M·∫™U ƒê√É ƒê∆Ø·ª¢C T·∫†O!';
PRINT '';
PRINT 'üìã T√ìM T·∫ÆT:';
PRINT '   ‚úÖ Database: PersonalFinanceDB';
PRINT '   ‚úÖ Users: 1 user m·∫´u';
PRINT '   ‚úÖ Categories: 16 categories (6 Income, 10 Expense)';
PRINT '   ‚úÖ Transactions: 4 giao d·ªãch m·∫´u';
PRINT '   ‚úÖ Budgets: 1 ng√¢n s√°ch m·∫´u';
PRINT '   ‚úÖ Settings: 3 c√†i ƒë·∫∑t m·∫´u';
PRINT '   ‚úÖ Notifications: 2 th√¥ng b√°o m·∫´u';
PRINT '';
PRINT 'üöÄ S·∫¥N S√ÄNG ƒê·ªÇ CHIA S·∫∫ TR√äN GITHUB!';
PRINT 'üìß T√°c gi·∫£: Ti·ªÉu Nh·∫•t B·∫°ch';
PRINT 'üìÖ Ho√†n th√†nh: ' + CONVERT(NVARCHAR, GETDATE(), 120);
PRINT '';